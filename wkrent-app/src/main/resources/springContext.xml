<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->
	<bean id="propertyConfigurer" class="com.wkrent.app.config.PropertiesBean">
		<property name="locations" >
			<list>
				<value>classpath*:application.properties</value>
				<value>classpath*:app-config.properties</value>
			</list>
		</property>
		<!-- 设置编码格式 -->
        <property name="fileEncoding" value="UTF-8" />
	</bean>
	
	<!-- 使用annotation 自动注册bean,并检查@Autowired,@Service等的属性已被注入 -->
	<context:component-scan base-package="com.wkrent">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="wkrentdb" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName">
			<value>${jdbc.db.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.db.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.db.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.db.pwd}</value>
		</property>
		<property name="initialSize">
			<value>${jdbc.db.initialSize}</value>
		</property>
		<property name="maxActive">
			<value>${jdbc.db.maxActive}</value>
		</property>
		<property name="minIdle">
			<value>${jdbc.db.minIdle}</value>
		</property>
		<property name="maxWait">
			<value>${jdbc.db.maxWait}</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>${jdbc.db.timeBetweenEvictionRunsMillis}</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>${jdbc.db.minEvictableIdleTimeMillis}</value>
		</property>
		<property name="testWhileIdle">
			<value>${jdbc.db.testWhileIdle}</value>
		</property>
		<property name="testOnBorrow">
			<value>${jdbc.db.testOnBorrow}</value>
		</property>
		<property name="testOnReturn">
			<value>${jdbc.db.testOnReturn}</value>
		</property>
		<property name="validationQuery">
			<value>${jdbc.db.validationQuery}</value>
		</property>
		<property name="proxyFilters">
			<list>
                <ref bean="logFilter" />
            </list>
        </property>
        <property name="filters" value="wall,log4j" />
	</bean>
	
    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="resultSetLogEnabled" value="false"/>
        <property name="statementExecutableSqlLogEnable" value="true"/>
    </bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sessionFactoryManage" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="wkrentdb" />
		<property name="mapperLocations">
			<list>
                <value>classpath*:com/wkrent/business/**/mapper/*.xml</value>
            </list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wkrent.business.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactoryManage"></property>
	</bean>
	
	<!-- 事务管理  -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="wkrentdb" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy />
	
</beans>